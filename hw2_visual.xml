<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="Say Word with Spaces %&apos;word&apos;" type="command" category="pen"><header></header><code></code><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>window size</l><l>letter size</l></list></block><block s="doSetVar"><l>window size</l><l>460</l></block><block s="clear"></block><block s="doSetVar"><l>letter size</l><block s="reportProduct"><l>1.65</l><block s="reportQuotient"><block var="window size"/><block s="reportStringSize"><block var="word"/></block></block></block></block><block s="gotoXY"><l>-230</l><l>-100</l></block><custom-block s="label %txt of size %n"><block var="word"/><block var="letter size"/><comment w="339" collapsed="false">Swap this with for each for dashes that appear to hide all the vowels </comment></custom-block><block s="hide"></block></script><scripts><script x="10" y="230.066666666667"><custom-block s="for each %upvar of %l %cs"><l>letter</l><custom-block s="word $arrowRight list %txt"><block var="word"/></custom-block><script><block s="doIfElse"><block s="reportListContainsItem"><block s="reportNewList"><list><l>a</l><l>e</l><l>i</l><l>o</l><l>u</l></list></block><block var="letter"/></block><script><custom-block s="label %txt of size %n"><l>-</l><block var="letter size"/></custom-block></script><script><custom-block s="label %txt of size %n"><block var="letter"/><block var="letter size"/></custom-block></script></block></script></custom-block></script></scripts></block-definition><block-definition s="label %&apos;text&apos; of size %&apos;size&apos;" type="command" category="pen"><header></header><code></code><inputs><input type="%txt">Hello!</input><input type="%n">12</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>text</l><l>size</l></list><l>var stage = this.parentThatIsA(StageMorph),&#xD;    context = stage.penTrails().getContext(&apos;2d&apos;),&#xD;    rotation = radians(this.direction() - 90),&#xD;    trans = new Point(&#xD;      this.center().x - stage.left(),&#xD;      this.center().y - stage.top()&#xD;    ),&#xD;    ide = this.parentThatIsA(IDE_Morph),&#xD;    isWarped = this.Warped,&#xD;    len,&#xD;    pos;&#xD;&#xD;if (isWarped) {endWarp(); }&#xD;context.save();&#xD;context.font = size + &apos;px monospace&apos;;&#xD;context.textAlign = &apos;left&apos;;&#xD;context.textBaseline = &apos;alphabetic&apos;;&#xD;context.fillStyle = this.color.toString();&#xD;len = context.measureText(text).width;&#xD;trans = trans.multiplyBy(1 / stage.scale);&#xD;context.translate(trans.x, trans.y);&#xD;context.rotate(rotation);&#xD;context.fillText(text, 0, 0);&#xD;context.translate(-trans.x, -trans.y);&#xD;context.restore();&#xD;pos = new Point(&#xD;  len * Math.sin(radians(this.direction())),&#xD;  len * Math.cos(radians(this.direction())));&#xD;pos = pos.add(new Point(this.xPosition(), this.yPosition()));&#xD;this.gotoXY(pos.x, pos.y, false);&#xD;this.changed();&#xD;if (isWarped) {this.startWarp(); }&#xD;stage.changed();</l></block><list><block var="text"/><block var="size"/></list></block></script></block-definition></blocks>